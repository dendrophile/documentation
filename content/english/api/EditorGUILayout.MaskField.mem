<signature>
MaskField_GUIContent_int_stringArray_GUIStyle_GUILayoutOptionArray
MaskField_string_int_stringArray_GUIStyle_GUILayoutOptionArray
MaskField_GUIContent_int_stringArray_GUILayoutOptionArray
MaskField_string_int_stringArray_GUILayoutOptionArray
MaskField_int_stringArray_GUIStyle_GUILayoutOptionArray
MaskField_int_stringArray_GUILayoutOptionArray
</signature>
Make a field for masks.

{img MaskField.png}\\
''Simple window that shows the mask field.''
BEGIN EX

	class SimpleMaskUsage extends EditorWindow {
		@MenuItem("Examples/Mask Field Usage")
		static function Init() {
			var window = GetWindow(SimpleMaskUsage);
			window.Show();
		}
		
		var flags : int = 0;
		var options : String[] = ["CanJump", "CanShoot", "CanSwim"];
		function OnGUI() {
			flags = EditorGUILayout.MaskField ("Player Flags", flags, options);
		}
	}
END EX
@param label Prefix label of the field
@param mask The current mask to display.
@param displayedOption A string array containing the labels for each flag.
@param options		An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the /style/.<br>
SA: GUILayout::ref::Width, GUILayout::ref::Height, GUILayout::ref::MinWidth, GUILayout::ref::MaxWidth, GUILayout::ref::MinHeight, 
GUILayout::ref::MaxHeight, GUILayout::ref::ExpandWidth, GUILayout::ref::ExpandHeight
@returns The value modified by the user.
