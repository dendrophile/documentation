CSNONE
If OnAudioFilterRead is implemented, Unity will insert a custom filter into the audio DSP chain.
The filter is inserted in the same order as the MonoBehaviour script is shown in the inspector. 
OnAudioFilterRead is called everytime a chunk of audio is routed thru the filter (this happens frequently, every ~20ms depending on the samplerate and platform).
The audio data is an array of floats ranging from [-1.0f;1.0f] and contains audio from the previous filter in the chain or the [[AudioClip]] on the [[AudioSource]]. If this is the first filter in the chain and a clip isn't attached to the audio source this filter will be 'played'. That way you can use the filter as the audio clip, procedurally generating audio.

If OnAudioFilterRead is implemented a VU meter will show up in the inspector showing the outgoing samples level. The process time of the filter is also measured and the spent milliseconds will show up next to the VU Meter (it turns red if the filter is taking up too much time, so the mixer will starv audio data).
Also note, that OnAudioFilterRead is called on a different thread from the main thread (namely the audio thread) so calling into many Unity functions from this function is not allowed ( a warning will show up ).

SA: [[wiki:class-AudioEffect|Audio Filters]]
BEGIN EX

	// This custom filter controls the gain by filtering the samples by multiplying each sample with a <i>gain</i> parameter.  

	public var gain : float;

	function OnAudioFilterRead(var data:float[], var channels:int) {
		for (var i = 0; i < data.Length; ++i)
			data[i] = data[i] * gain;			
	}
END EX