Returns the component of Type /type/ if the game object has one attached, null if it doesn't.
CONVERTEXAMPLE
BEGIN EX

	// Equivalent to: Transform curTransform = transform;
	var curTransform : Transform;
	curTransform = GetComponent (Transform);
	 
	// You can access script components in the same way as other components.
	function Start () {
		var someScript : ExampleScript;
		someScript = GetComponent (ExampleScript);
		someScript.DoSomething ();
	}
END EX<signature>
GetComponent_Type
GetComponent_string
</signature>
Returns the component with name /type/ if the game object has one attached, null if it doesn't.
It is better to use GetComponent with a Type instead of a string for performance reasons.
Sometimes you might not be able to get to the type however, for example when trying to access a C# script from Javascript.
In that case you can simply access the component by name instead of type.
Example:
CONVERTEXAMPLE
BEGIN EX

	// To access public variables and functions 
	// in another script attached to the same game object.
	var script : ScriptName;
	script = GetComponent("ScriptName");
	script.DoSomething ();
END EX
